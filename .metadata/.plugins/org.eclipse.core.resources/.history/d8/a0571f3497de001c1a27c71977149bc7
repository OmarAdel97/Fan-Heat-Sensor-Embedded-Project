 /******************************************************************************
 *
 * Module: ADC
 *
 * File Name: adc.c
 *
 * Description: Source file for the AVR ADC driver
 *
 * Author: Omar Adel
 *
 *******************************************************************************/


#include "adc.h"

#include "avr/io.h" /* To use the IO Ports Registers */
#include "common_macros.h" /* To use the macros like SET_BIT */

void ADC_init(const ADC_ConfigType*Ptr){

	/* ADMUX Register Bits Description:
		 * REFS1:0 = 00 to choose to connect external reference voltage by input this voltage through AREF pin
		 * ADLAR   = 0 right adjusted
		 * MUX4:0  = 00000 to choose channel 0 as initialization
		 */
		ADMUX = 0;

		/* ADCSRA Register Bits Description:
		 * ADEN    = 1 Enable ADC
		 * ADIE    = 0 Disable ADC Interrupt
		 * ADATE   = 0 Disable Auto Trigger
		 * ADPS2:0 = 011 to choose ADC_Clock=F_CPU/8=1Mhz/8=125Khz --> ADC must operate in range 50-200Khz
		 */
	SET_BIT(ADCSRA,ADEN);
	ADCSRA = (ADCSRA&0xF8)|(0x07 & Ptr->prescaler);
//	SET_BIT(ADCSRA,ADPS0);
//	SET_BIT(ADCSRA,ADPS1);

}
uint16 ADC_readChannel(uint8 ch_num){

	ADMUX = (ADMUX&0xE0) | (ch_num& 0x07);
	SET_BIT(ADCSRA,ADSC);
	while(BIT_IS_CLEAR(ADCSRA,ADIF));
	SET_BIT(ADCSRA,ADIF);
	return ADC;

}
